/**********************************************************************
 * Assingment3b
 * Created by: Gavin Zhou 
 * Created on: 4/4 2019
 *
 **********************************************************************/

import java.util.Scanner;
import java.util.Random;

public class BinarySearch2{
	public static void main(String[] args){
			// explan how many numbers, what the userInput
		Scanner userInput = new Scanner(System.in);
		Random range = new Random();

		int[] values = new int[100];

		System.out.print("Generat Values:\n");

		int randomNumber;


		for(int counter = 0; counter < values.length; counter++){
			 randomNumber = range.nextInt(600) + 1;
			 values[counter] = randomNumber;
			 System.out.println(randomNumber);

			}

			System.out.println("\nSorted values: ");
			NumberSort(values);

			do{
			 	System.out.println("Enter a number from 1 to 600 to search in values (Enter -1 to exit the program): ");

			 	int userNumber = userInput.nextInt();

			 	if (userNumber < -1) {
			 		System.out.print("\nInvalid.");
			 		System.exit(0);
			 	}
			 	else if (userNumber > 600){
			 	System.out.print("\nInvalid.");
			 	System.exit(0);
			 	}
			 	else if(userNumber == -1){
			 		System.out.print("Thank you for using this program!");
			 		System.exit(0);
			 	}
			 	else{
			 		String search = NumSearch(values, userNumber);
			 		System.out.print("\n" + search);
			 	}
			 }while(true);
		}

	public static void NumberSort(int array[]){

		int arrLen = array.length;

		for(int nextNum = 0; nextNum < arrLen; nextNum ++){
				for(int prevNum = 0; prevNum < arrLen; prevNum++){
						if(array[nextNum] < array[prevNum]){
								int sub = array[nextNum];
								array[nextNum] = array[prevNum];
								array[prevNum] = sub;
						}
				}
		}
		for(int counter = 0; counter < arrLen; counter++){
				System.out.println(array[counter]);
		}
	}

	public static String NumSearch(int array[], int searchNum){
		int lowInd = 0;
		int highInd = array.length - 1;
		int midInd;

		while(lowInd <= highInd){

			midInd = (lowInd + highInd)/2;
		System.out.println(highInd);
			if(searchNum == array[midInd]){
					return "found at" + (midInd + 1) + "\n";
			}
			else if(searchNum > array[midInd]){
					lowInd = midInd + 1;
			}
			else if(searchNum < array[midInd]){
					highInd = midInd - 1;
			}
			else if(lowInd > highInd){
					return "the value is no found. ";
			}
			else{
				break;
			}
		}

		return "the value is no found. ";
	}

		
}
